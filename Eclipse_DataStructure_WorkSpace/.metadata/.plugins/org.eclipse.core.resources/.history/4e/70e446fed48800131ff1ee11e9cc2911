
public class LinkedList {
private Link first;
//-------------------------------------------------------------
public LinkedList() // constructor
{
first = null; // no items on list yet
}
//-------------------------------------------------------------
public boolean isEmpty() // true if list is empty
{
return (first==null);
}
//-------------------------------------------------------------
//insert at start of list
public void insertFirst(Person person)
{ // make new link
Link newLink = new Link(person);
newLink.next = first; // newLink --> old first
first = newLink; // first --> newLink
}
//-------------------------------------------------------------
public Link deleteFirst() // delete first item
{ // (assumes list not empty)
Link temp = first; // save reference to link
first = first.next; // delete it: first-->old next
return temp; // return deleted link
}


//-------------------------------------------------------------
public void displayList()
{
System.out.print("List (first-->last): ");
Link current = first; // start at beginning of list
while(current != null) // until end of list,
{
current.displayLink(); // print data
current = current.next; // move to next link
}
System.out.println(" ");
}
//-------------------------------------------------------------
public void findMiddle()
{
System.out.print("First ");
Link stepOne = first; // start at beginning of list
Link stepTwo = first; 
while(stepOne != null) // until end of list,
{
	for(int i=0;i<1;i++){
		stepOne=stepOne.next;
	}
	stepTwo=stepTwo.next;
}
}
//-
} // end class LinkList
